# This is the base docker-compose file which runs across all environments
# it is supplemented by environment specific compose files.

version: "3.6"

# Define common configuration for Drupal services, each service merges in
# this configuration.
x-drupal-base:
  &drupal-base
  image: "${DRUPAL_IMAGE_NAME?}"
  env_file: .env
  tmpfs: [ /tmp ]
  read_only: true
  user: "${ENV_USER_ID?}:${ENV_GROUP_ID?}"

services:

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web:/app/web:ro
    tmpfs: [ /tmp ]
    ports: [ 80:8080 ]
    depends_on: [ drupal ]
    networks: [ web ]
    read_only: true
    restart: on-failure

  drupal:
    << : *drupal-base
    build: ./docker
    volumes:
      - ./private_files:/app/private_files:rw
      - ./web/sites:/app/web/sites:rw
      - ./:/app:ro
    depends_on: [ mariadb ]
    networks: [ web, db ]
    restart: on-failure

  # The drupal-cli service is used by the `./cli` script. This allows us
  # to give this service write permissions to the entrie project for
  # Composer and Drush. The drupal service only has write permissions to
  # the files directories to mitigate against any potential Remote Code
  # Execution (RCE) vulnerabilities.
  drupal-cli:
    << : *drupal-base
    volumes:
      - ./:/app:rw
    networks: [ db ]
    # Specify a profile so that this service is not created by default
    # when running `./cli` it creates the drupal-cli service as a
    # temporary container.
    profiles: [ cli ]
    # Override the entrypoint to use the custom cli entrypoint script
    entrypoint: "/cli-docker-entrypoint.sh"

  cron:
    << : *drupal-base
    volumes:
      - ./private_files:/app/private_files:rw
      - ./web/sites:/app/web/sites:rw
      - ./:/app:ro
    networks: [ db ]
    restart: on-failure
    entrypoint: "/usr/local/bin/supercronic"
    command: "/app/docker/crontab"

  mariadb:
    image: mariadb
    volumes:
      - db:/var/lib/mysql:rw
    tmpfs: [ /tmp, /run/mysqld ]
    networks: [ db ]
    env_file: .env
    read_only: true
    restart: on-failure

networks:
  web:
    driver: bridge
  db:
    driver: bridge

volumes:
  db:
