## Example .env file
##
## Copy this file and name it .env, you can then uncomment and set the variables
## that you want to use. The variables here are used in various places of the
## project, for example Docker Compose and PHP Composer.  You can also add your
## own environment variables as required.

## ENVIRONMENT
## Specifies which environment this is, supported values are:
##   dev, test, prod
##
## This will result in environment-specific overrides being used when running
## `./docker-compose` and when building the Drupal `Dockerfile`, see
## `docker/Dockerfile`, and `./docoker/docker-compose.local.yml` for example.
##
## For local, dev and test: a mailhog container is provided and configured
## when building the Dockerfile, along with PHP ini settings which are
## useful for development.
##
## For prod: PHP ini settings useful for running in production environments
## are used.
ENVIRONMENT=dev

## The URL that Drush will use for commands like `uli` and for the @self
## alias
DRUSH_OPTIONS_URI=http://localhost

## Database name, username and password. On first run, the mariadb container
## will autoamtically setup the database and associated username and password.
MARIADB_USER=drupal
MARIADB_PASSWORD=drupal
MARIADB_DATABASE=drupal

## This will set the database root user to have a randomly generated password.
## The password is printed in the Docker log when the container is first setup
## and can be reset later if needed.
MARIADB_RANDOM_ROOT_PASSWORD=true

## COMPOSER_HOME
## Override the directory that Composer will use as its home directory, this is
## mostly used for cache. Setting this is not required and Composer will default
## to the .composer folder in the user's home directory. The directory used will
## be mounted inside the running container, use with caution.
# COMPOSER_HOME=$HOME/.composer
